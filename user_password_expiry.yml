---
- name: user password expiry set
  hosts: all
  ignore_errors: no
  become: yes
  tasks:
          # - name: clreate the user if not present
          # user:
          # name: ibmssh
          # state: present 

    - name: Check the present password expiry settings
      shell:
        "chage -l ibmssh"
      register: expiry_bebore

    - name: Check the present passwd file
      shell:
        "cat /etc/passwd |grep -i ibmssh"
      register: passwd_before

    - name: Fixing the user password expiry
      shell:
        "/usr/bin/chage -d $(date -d 0days +%Y-%m-%d) -M 30 ibmssh"
      register: expity_after

    - name: Fixing the user comment
      shell:
        "/usr/sbin/usermod -c 'FR/S/*XJ0LIN/Kyndryl/ibmssh-Compte Fonction' ibmssh"
      register: passwd_after

    - name: Taking backup of crontab
      shell:
        "/usr/bin/cp -pr  /var/spool/cron/root /var/spool/cron/root-`date +%Y.%m.%d.%H:%M:%S`"
      register: crontab_bkp

    - name: Fixing the new crontab entry
      shell:
        '/usr/bin/echo "01 00 28 * * /usr/bin/chage -d \$(date -d 0days +%Y-%m-%d) -M 30 ibmssh" >> /var/spool/cron/root'
      register: crontab_new

    - name: Check the passwd file after the fiz
      shell:
        "cat /etc/passwd |grep -i ibmssh"
      register: passwd_after

    - name: Check the password expiry settings after the fix
      shell:
        "chage -l ibmssh"
      register: expiry_after

    - name: Result - Expiry before fix
      debug:
              # var: expiry_bebore
        msg: "{{expiry_bebore.stdout_lines[1]|replace('\t',' ') }}"

    - name: Result - Expirt after the fix
      debug:
        msg: "{{expiry_after.stdout_lines|replace('\\t',' ') }}"

    - name: Result - User Comment before fix
      debug:
        msg: "User Comment Before - {{passwd_before.stdout}}"

    - name: Result - User Comment after the fix
      debug:
        msg: "User Comment After - {{passwd_after.stdout}}"
